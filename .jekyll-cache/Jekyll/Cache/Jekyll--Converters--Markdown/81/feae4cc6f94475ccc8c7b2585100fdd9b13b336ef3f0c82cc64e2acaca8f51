I"Ë"<h2 id="explicaci√≥n-te√≥rica">Explicaci√≥n te√≥rica</h2>

<p>En el curso de especializaci√≥n de ciberseguridad <a href="https://raul-profesor.github.io/Curso-especialista-ciberseguridad/segof/servicios_desact/#un-caso-real-eternalblue-ms17-010-smbv1-y-wannacry">ya he hablado</a> de la archiconocida vulnerabilidad EternalBlue.</p>

<p>Tambi√©n <a href="https://raul-profesor.github.io/Curso-especialista-ciberseguridad/segof/EternalBlue/">intentamos explotar</a> esta vulnerabilidad con un √©xito regular, puesto que las m√°quinas que prob√© para dise√±ar ese ejercicio nos fue imposible explotarlas de forma manual, aunque s√≠ con Metasploit.</p>

<p>Se me qued√≥ la espinita clavada, m√°xime cuando ten√≠a documentada desde hac√≠a un tiempo la soluci√≥n de la m√°quina <code class="language-plaintext highlighter-rouge">Blue</code> de HTB de forma manual sin problemas, con pruebas gr√°ficas. Por lo que sea, no volvi√≥ a funcionar <a href="https://github.com/worawit/MS17-010">de esta forma</a> ni ah√≠ ni en THM.</p>

<p>Recientemente se me dio el caso contrario; haciendo uso de Metasploit, por lo que sea tambi√©n, no fui capaz de comprometer una determinada m√°quina. Esta vez sin embargo s√≠ pude hacerlo de forma manual y vamos a ver distintas formas de hacerlo.</p>

<h2 id="caso-pr√°ctico">Caso pr√°ctico</h2>

<p>Como siempre, dado que estos posts son ideas y notas que puedan servir de una forma r√°pida en el futuro como base para otros menesteres, no supondr√° un Writeup completo de la m√°quina.</p>

<p>Se parte de una situaci√≥n previa donde se ha realizado una exhaustiva enumeraci√≥n de tal forma que hemos descubierto que tenemos un servico SMB vulnerable a <a href="https://support.microsoft.com/es-es/topic/ms17-010-actualizaci%C3%B3n-de-seguridad-para-windows-server-de-smb-14-de-marzo-de-2017-435c22fb-5f9b-f0b3-3c4b-b605f4e6a655">MS17-010</a> o EternalBlue para los amigos.</p>

<p>Tambi√©n sabemos que la m√°quina v√≠ctima u objetivo puede correr un Windows Server 2008-2012-2016.</p>

<p>Y por √∫ltimo, <strong>poseemos unas credenciales de acceso no privilegiado para el servicio SMB.</strong></p>

<p>En mi caso particular, los exploits que he encontrado para esta vulnerabilidad son muy poco estables y propensos a dejar la m√°quina inh√°bil.</p>

<p>En un primer lugar he probado con <a href="https://github.com/3ndG4me/AutoBlue-MS17-010">Autoblue</a>, el cual facilita un poco el proceso manual que se indicaba <a href="https://raul-profesor.github.io/Curso-especialista-ciberseguridad/segof/EternalBlue/">en el ejercicio del curso de especializaci√≥n</a> ya que genera el payload con msfvenom y combina los ejecutables para ambas arquitecturas de forma automatizada.</p>

<p>Al no conseguir el √©xito de esta forma en el caso que nos ocupa, buscamos otros exploits, como por ejemplo:</p>

<p><img src="../img/eternal/search-eternal.png" alt="" /></p>

<p>Vemos que tenemos otro serio candidato a utilizar y que, a modo de spoiler, puedo confirmar que funciona adecuadamente.</p>

<h3 id="hands-on-o-en-castizo-manos-a-la-obra">Hands-on o, en castizo, manos a la obra</h3>

<p>El exploit que vamos a utilizar no es m√°s que una PoC. Si examinamos el c√≥digo vemos que lo que hace es crear un archivo de texto <code class="language-plaintext highlighter-rouge">pwned.txt</code> en el directorio compartido de SMB a modo de prueba de que es vulnerable:</p>

<p><img src="../img/eternal/poc.png" alt="" /></p>

<p>Lo bueno de Internet es que mucha gente v√°lida e inteligente ha decidido compartir su conocimiento de forma gratuita con el resto de mortales, para que aprendamos de ellos. Esta suerte <a href="https://redteamzone.com/EternalBlue/">nos permite conocer distintos m√©todos de hacer uso de este exploit</a> para vulnerar de una forma m√°s o menos ruidosa una m√°quina.</p>

<h4 id="m√©todo-1-subiendo-una-shell-a-pecho-descubierto-como-elefante-en-cacharrer√≠a">M√©todo 1: Subiendo una shell a pecho descubierto, como elefante en cacharrer√≠a</h4>

<p>Siguiendo los pasos indicados, podemos crear un payload para nuestra shell inversa haciendo uso de <code class="language-plaintext highlighter-rouge">msfvenom</code>:</p>

<p><img src="../img/eternal/msfvenom.png" alt="" /></p>

<p>Y modificamos el c√≥digo en consonancia:</p>

<p><img src="../img/eternal/metodo1.png" alt="" /></p>

<p>Bien es cierto que puede que haya que lanzar el exploit varias veces antes de conseguir tener √©xito, aunque es bastante m√°s fiable que el resto de los que he probado. Vemos como conseguimos hacernos con un acceso privilegiado a la m√°quina:</p>

<p><img src="../img/eternal/metodo1-OK.png" alt="" /></p>

<h4 id="m√©todo-2-un-poco-m√°s-sigiloso-metal-gear-solid-style">M√©todo 2: Un poco m√°s sigiloso, Metal Gear Solid style</h4>

<p>Nadie podr√° discutir que el m√©todo anterior, a pesar de ser efectivo, es <em>a lo bruto</em>. Estamos subiendo un archivo ejecutable a la m√°quina sin ning√∫n tipo de disimulo y esto har√° saltar las alarmas de forma inmediata.</p>

<p>Una forma un poco m√°s disimulada es hacer que la m√°quina v√≠ctima acceda al payload en Powershell de forma remota y lo ejecute, siendo todo el proceso en memoria sin tocar el disco.</p>

<p>Para este cometido utilizaremos las famosas shells de Nishang, que en distribuciones Linux enfocadas a la seguridad ya vienen incluidas. En Parrot por ejemmplo, las podemos encontrar en el directorio: <code class="language-plaintext highlighter-rouge">/usr/share/nishang/Shells</code>. Nosotros haremos uso concretamente de <code class="language-plaintext highlighter-rouge">Invoke-PowerSAhellTcp.ps1</code>.</p>

<p>Nos copiamos esa shell a nuestro entorno de trabajo y justo al final del archivo, a√±adimos lo que nos hace falta para nuestra reverse shell:</p>

<p><img src="../img/eternal/metodo2.png" alt="" /></p>

<p>Y modificamos de nuevo el c√≥digo del exploit en consonancia:</p>

<p><img src="../img/eternal/metodo2-2.png" alt="" /></p>

<p>Puesto que ahora la m√°quina v√≠ctima acceder√° al payload v√≠a <code class="language-plaintext highlighter-rouge">HTTP</code>, debemos servir el script de Powershell mediante un sencillo servidor web, utilizando Python. Con todo preparado, ejecutamos de nuevo:</p>

<p><img src="../img/eternal/metodo2-OK.png" alt="" /></p>

<p>En los tres terminales de la imagen y por orden cronol√≥gico:</p>

<ol>
  <li>En el de arriba a la izquierda, se lanza de nuevo el exploit contra la IP de la m√°quina v√≠ctima</li>
  <li>En el terminal de la derecha podemos observar como se produce un acceso HTTP exitoso a nuestro servidor para solicitar el script de <em>powershell</em></li>
  <li>Por √∫ltimo en el terminal de abajo a la izquierda, donde teniamos un netcat escuchando en el puerto al que conectar√° nuestro script de powershell para devolvernos la shell inversa, vemos como finalmente se obtiene dicha shell como <code class="language-plaintext highlighter-rouge">system</code>.</li>
</ol>

<h4 id="m√©todo-3-intentando-ser-un-poco-sutil">M√©todo 3: Intentando ser un poco sutil</h4>

<p>En alg√∫n momento puede que queramos ser un poco m√°s sigilosos y que la m√°quina v√≠ctima no nos devuelva una shell inversa o se conecte a cualquier otro sitio para descargarse ning√∫n archivo, cosas ambas que podr√≠an levantar bastantes sospechas.</p>

<p>En ese caso podemos optar por, directamente, crear un usuario privilegiado administrador en la m√°quina v√≠ctima y, directamente, hacer login con √©l.</p>

<p>Para ello modificamos nuestro exploit para que el servicio que creemos, ejecute la acci√≥n que deseamos:</p>

<p><img src="../img/eternal/metodo3.png" alt="" /></p>

<p>Hecho esto, repetimos nuestro modus operandi. Primeramente ejecutaremos el exploit y posteriormente, como se ve en el terminal de la derecha, intentaremos hacer login usando el script <code class="language-plaintext highlighter-rouge">psexec</code> de Impacket:</p>

<p><img src="../img/eternal/metodo3-NOK.png" alt="" /></p>

<p>En este caso <code class="language-plaintext highlighter-rouge">psexec.py</code> no encuentrar ning√∫n directorio compartido en SMB que sea escriturable para subir su binario e iniciarlo con el administrador de servicios (sc), as√≠ que nos da error y no conseguimos conectarnos.</p>

<p>No obstante, si estuviera disponible, podr√≠amos conectarnos de una forma t√≠pica y directa como es RDP:</p>

<p><img src="../img/eternal/metodo3-OK.png" alt="" /></p>

<p>A pesar de esta √∫ltima ser una forma un poco m√°s silenciosa y elegante, las tres son bastante susceptibles de hacer sonar todas las alarmas y ser bloqueados por EDRs y protecciones varias de endpoints, entre otros elementos.</p>

<p><strong>EDIT-</strong> De casualidad me he encontrado con <a href="https://deephacking.tech/por-que-se-pueden-ejecutar-comandos-a-traves-de-smb/">este post</a> que me parece interesante para entender el por qu√© podemos utilizar este exploit en SMB para crear y ejecutar el servicio.</p>
:ET